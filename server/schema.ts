/* tslint:disable */
/* eslint-disable */


/**
 * AUTO-GENERATED FILE - DO NOT EDIT!
 *
 * This file was automatically generated by pg-to-ts v.4.1.0
 * $ pg-to-ts generate -c postgresql://username:password@db -t app_user -t heatpump -t schedule -s public
 *
 */


export type Json = unknown;
export type heatpump_mode = 'cool' | 'heat';
export type weekday = 'friday' | 'monday' | 'saturday' | 'sunday' | 'thursday' | 'tuesday' | 'wednesday';

// Table app_user
export interface AppUser {
  id: string;
  username: string;
  password_hash: string;
}
export interface AppUserInput {
  id?: string;
  username: string;
  password_hash: string;
}
const app_user = {
  tableName: 'app_user',
  columns: ['id', 'username', 'password_hash'],
  requiredForInsert: ['username', 'password_hash'],
  primaryKey: 'id',
  foreignKeys: {},
  $type: null as unknown as AppUser,
  $input: null as unknown as AppUserInput
} as const;

// Table heatpump
export interface Heatpump {
  id: string;
  device_id: number;
  name: string | null;
  temperature: number;
  fan_speed: number;
  mode: heatpump_mode;
}
export interface HeatpumpInput {
  id?: string;
  device_id: number;
  name?: string | null;
  temperature: number;
  fan_speed: number;
  mode: heatpump_mode;
}
const heatpump = {
  tableName: 'heatpump',
  columns: ['id', 'device_id', 'name', 'temperature', 'fan_speed', 'mode'],
  requiredForInsert: ['device_id', 'temperature', 'fan_speed', 'mode'],
  primaryKey: 'id',
  foreignKeys: {},
  $type: null as unknown as Heatpump,
  $input: null as unknown as HeatpumpInput
} as const;

// Table schedule
export interface Schedule {
  id: string;
  created_at: Date;
  description: string;
  fan_speed: number;
  temperature: number;
  start_time: string;
  end_time: string;
  weekdays: weekday[];
}
export interface ScheduleInput {
  id?: string;
  created_at?: Date;
  description?: string;
  fan_speed: number;
  temperature: number;
  start_time: string;
  end_time: string;
  weekdays?: weekday[];
}
const schedule = {
  tableName: 'schedule',
  columns: ['id', 'created_at', 'description', 'fan_speed', 'temperature', 'start_time', 'end_time', 'weekdays'],
  requiredForInsert: ['fan_speed', 'temperature', 'start_time', 'end_time'],
  primaryKey: 'id',
  foreignKeys: {},
  $type: null as unknown as Schedule,
  $input: null as unknown as ScheduleInput
} as const;


export interface TableTypes {
  app_user: {
    select: AppUser;
    input: AppUserInput;
  };
  heatpump: {
    select: Heatpump;
    input: HeatpumpInput;
  };
  schedule: {
    select: Schedule;
    input: ScheduleInput;
  };
}

export const tables = {
  app_user,
  heatpump,
  schedule,
}
